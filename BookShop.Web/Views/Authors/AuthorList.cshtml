@using BookShop.Application.Enums
@using BookShop.Shared
@model BookShop.Application.Abstractions.IPagedResult<BookShop.Application.Models.AuthorModel>

@{
    ViewData["Title"] = "Author List";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    var IsAdmin =  Context.User.IsInRole(Roles.Admin.GetName());
    var IsManager = Context.User.IsInRole(Roles.Manager.GetName());
    var IsAdminOrManager = IsAdmin || IsManager;
}

<p class="mb-2">
    <a class="bg-sky-600 text-white font-bold py-1 px-2 rounded transition duration-300" asp-action="CreateAuthor">Add New Author</a>
</p>
<div class="flex gap-x-2 mb-4">
    <form asp-action="AuthorList" method="get" class="flex gap-x-2">
        <input asp-for="SearchByNameAndSurname" type="text" placeholder="Search by name and surname" class="border border-gray-300 rounded px-2 py-1" />
        @if (IsAdminOrManager)
        {
            <lable>
                <input asp-for="IsDeleted" type="checkbox"  placeholder="Show archived authors"/>
                Show archived authors
            </lable>
        }
        <button type="submit" class="bg-sky-600 text-white font-bold py-1 px-2 rounded transition duration-300">
            <i class="fa-solid fa-magnifying-glass"></i>
        </button>
    </form>
</div>
@if(Model.Items.Any()){
    <table class="table">
        <thead>
        <tr>
            <th>
                @Html.DisplayName("Id")
            </th>
            <th>
                @Html.DisplayName("Full Name")
                <a asp-route-SortDirection="1">
                    <i class="@("fa-solid fa-arrow-down-z-a " + (Model.SortDirection == SortDirection.Ascending ? "text-[#2563eb]" : ""))"></i>
                </a>
                <a asp-route-SortDirection="2">
                    <i class="@("fa-solid fa-arrow-up-a-z " + (Model.SortDirection == SortDirection.Descending ? "text-[#2563eb]" : ""))"></i>
                </a>
            </th>
            <th>
                @Html.DisplayName("Books Count")
            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var authorModel in Model.Items) {
            <tr class="@((authorModel.IsDeleted ? "bg-[#f1e4e4]" : ""))">
                <td>
                    @Html.DisplayFor(modelItem => authorModel.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => authorModel.NameAndSurname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => authorModel.BookCount)
                </td>
                <td class="flex gap-x-2">
                    <form asp-action="RemoveAuthor" method="post">
                        @if (!authorModel.IsDeleted && IsAdminOrManager)
                        {
                            <input type="hidden" name="authorId" value="@authorModel.Id"/>
                            
                            <div class="d-flex gap-x-2">
                                <button class="bg-red-600 text-white font-bold py-1 px-2 rounded transition duration-300" asp-action="RemoveAuthor">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                                    <a asp-action="AuthorForm" asp-route-id="@authorModel.Id" class="bg-blue-600 text-white font-bold py-1 px-2 rounded transition duration-300">
                                        <i class="fa-solid fa-pen-to-square"></i>
                                    </a>
                            </div>
                        }
                    </form>
                </td>               
            </tr>
        }
        </tbody>
    </table>
    <div class="d-flex">
        @foreach (var paginationButton in Enumerable.Range(1, Model.PageCount).ToList())
        {
            <a asp-route-CurrentPage="@paginationButton" asp-route-RowCount="10" asp-route-SortDirection="@Model.SortDirection"
               class="@("font-bold mr-1 !px-1 rounded transition duration-300 cursor-pointer text-decoration-none " + 
                        (Model.CurrentPage == paginationButton ? "bg-white-600 !text-sky-600 !border !border-sky-600" : "bg-sky-600 text-white "))">
                @Html.DisplayFor(modelItem => paginationButton)
            </a>
        }
    </div>
} else {
    <p>Empty</p>
}