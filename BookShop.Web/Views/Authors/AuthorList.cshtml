@model BookShop.Application.Abstractions.IPagedResult<BookShop.Application.Models.AuthorModel>

@{
    ViewData["Title"] = "Author List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p class="mb-2">
    <a class="bg-sky-600 text-white font-bold py-1 px-2 rounded transition duration-300" asp-action="CreateAuthor">Add New Author</a>
</p>
@if(Model.Items.Any()){
    <table class="table">
        <thead>
        <tr>
            <th>
                @Html.DisplayName("Id")
            </th>
            <th>
                @Html.DisplayName("Full Name")
            </th>
            <th>
                @Html.DisplayName("Books Count")
            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var authorModel in Model.Items) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => authorModel.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => authorModel.NameAndSurname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => authorModel.BookCount)
                </td>
                <td class="flex gap-x-2">
                    <form asp-action="RemoveAuthor" method="post">
                        <input type="hidden" name="authorId" value="@authorModel.Id" />
                        <button class="bg-red-600 text-white font-bold py-1 px-2 rounded transition duration-300" asp-action="RemoveAuthor">
                            <i class="fa-solid fa-trash"></i>
                        </button>
                    </form>
                    <a asp-action="AuthorForm" asp-route-id="@authorModel.Id" class="bg-blue-600 text-white font-bold py-1 px-2 rounded transition duration-300" >
                        <i class="fa-solid fa-pen-to-square"></i>
                    </a>
                </td>               
            </tr>
        }
        </tbody>
    </table>
    <div class="d-flex">
        
        @foreach (var paginationButton in Enumerable.Range(1, Model.PageCount).ToList())
        {
            <a asp-route-CurrentPage="@paginationButton" asp-route-RowCount="10" 
               class="@("font-bold mr-1 !px-1 rounded transition duration-300 cursor-pointer text-decoration-none " + 
                        (Model.CurrentPage == paginationButton ? "bg-white-600 !text-sky-600 !border !border-sky-600" : "bg-sky-600 text-white "))">
                @Html.DisplayFor(modelItem => paginationButton)
            </a>
        }

    </div>
} else {
    <p>Empty</p>
}